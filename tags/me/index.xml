<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>me on Nadeem Hilal</title>
    <link>https://nhwaani.github.io/tags/me/</link>
    <description>Recent content in me on Nadeem Hilal</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 30 Jun 2020 00:48:21 +0400</lastBuildDate>
    
	<atom:link href="https://nhwaani.github.io/tags/me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Review the Pragmatic Programmer</title>
      <link>https://nhwaani.github.io/posts/2020/06/review-the-pragmatic-programmer/</link>
      <pubDate>Tue, 30 Jun 2020 00:48:21 +0400</pubDate>
      
      <guid>https://nhwaani.github.io/posts/2020/06/review-the-pragmatic-programmer/</guid>
      <description>Today i decided to add my review about one of the best books among the software engineers, its a must to have in your bookshelf. The book was written by Dave Thomas and Andy Hunt , and the motto of the book was
YOUR JOURNEY TO MASTERY. This book starts with simple yet profound message
 ITS YOUR LIFE
 It reminds us of our own power in our code-base, jobs , careers. Why this book is different then other books is that it understands what it means to be a programmer. As a relative newcommer, its easy to be overwhelmed not by the act of programming but the process of becoming a programmer.
There is an entire mindset shift that needs to happen &amp;ndash; c changed in the habbits, behaviours, and expectations. The book says that the process of becoming the better programmer does not just happen because
 you know how to code ; It must be met with intention and delibrate practice
 And believe me this book teach it best.
Just a quick reminder, i will be reviewing thier 20th Edition as it the updated edition that came out recently &amp;hellip;</description>
    </item>
    
    <item>
      <title>Write Code That Is Easy to Delete</title>
      <link>https://nhwaani.github.io/posts/2020/04/write-code-that-is-easy-to-delete/</link>
      <pubDate>Sat, 04 Apr 2020 00:14:21 +0400</pubDate>
      
      <guid>https://nhwaani.github.io/posts/2020/04/write-code-that-is-easy-to-delete/</guid>
      <description>“Every line of code is written without reason, maintained out of weakness, and deleted by chance” Jean-Paul Sartre’s Programming in ANSI C.
 Every line of code written comes at a price: maintenance. To avoid paying for a lot of code, we build reusable software. The problem with code re-use is that it gets in the way of changing your mind later on.
The more consumers of an API you have, the more code you must rewrite to introduce changes. Similarly, the more you rely on an third-party api, the more you suffer when it changes. Managing how the code fits together, or which parts depend on others, is a significant problem in large scale systems, and it gets harder as your project grows older.
 My point today is that, if we wish to count lines of code, we should not regard them as “lines produced” but as “lines spent” EWD 1036
 If we see ‘lines of code’ as ‘lines spent’, then when we delete lines of code, we are lowering the cost of maintenance. Instead of building re-usable software, we should try to build disposable software.
I don’t need to tell you that deleting code is more fun than writing it.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://nhwaani.github.io/about/</link>
      <pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://nhwaani.github.io/about/</guid>
      <description>Hey, My name is Nadeem Hilal, i am an Software Engineer by chance from a remote area of the world known as KASHMIR. I have completed my masters in Computer Applications aka (M.C.A) from the University of Kashmir North Campus.
Currently i am living in DUBAI and alhamduliallah earing some bucks by working as a Software engineer. I have got in love with the CS (Software Engineering field) as i keep exploring it.
I Find it very interesting , especially the addiction when u hunt for a bug that kept u sleepless from nights.
I want to do space walk and fly to see space and explore sometime there. Most of the time i am busy solidifying my knowledge regarding: #Software architecture #Scalability #Designing Applications #Operating System #Algorithms #Data Structures #Code Refactoring #Databases #Programming</description>
    </item>
    
  </channel>
</rss>